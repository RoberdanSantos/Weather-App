// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String   @id @default(uuid())
  email               String   @unique
  password            String
  name                String
  address             Address?
  searchLogs          SearchLog[]  
  recentCities        String[] @default([])
  passwordResetTokens PasswordResetToken[]
  favoriteLocations   FavoriteLocation[]
  createdAt           DateTime @default(now())
}

model Address {
  id           String   @id @default(uuid())
  userId       String   @unique
  cep          String
  street       String
  number       String
  neighborhood String
  city         String
  state        String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SearchLog {
  id          String   @id @default(uuid())
  userId      String
  location    String
  temperature Int
  condition   String
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FavoriteLocation {
  id        String   @id @default(uuid())
  userId    String
  name      String
  country   String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
